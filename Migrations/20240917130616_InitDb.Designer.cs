// <auto-generated />
using System;
using EngMasterWPF.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EngMasterWPF.Migrations
{
    [DbContext(typeof(EngMasterDbContext))]
    [Migration("20240917130616_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserAccountsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserAccountsId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "Lớp học tiếng Anh A",
                            EndDate = new DateTime(2024, 9, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Class A",
                            Price = 100000000m,
                            StartDate = new DateTime(2024, 9, 1, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 5,
                            Description = "Lớp học tiếng Anh B",
                            EndDate = new DateTime(2024, 9, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Class B",
                            Price = 2000000m,
                            StartDate = new DateTime(2024, 9, 2, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Description = "Lớp học tiếng Anh C",
                            EndDate = new DateTime(2024, 9, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Class C",
                            Price = 3000000m,
                            StartDate = new DateTime(2024, 9, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 5,
                            Description = "Lớp học tiếng Anh D",
                            EndDate = new DateTime(2024, 9, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Class D",
                            Price = 4000000m,
                            StartDate = new DateTime(2024, 9, 4, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 4,
                            Description = "Lớp học tiếng Anh E",
                            EndDate = new DateTime(2024, 9, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Class E",
                            Price = 5000000m,
                            StartDate = new DateTime(2024, 9, 5, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.ClassWeekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndHour")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartHour")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekdayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("WeekdayId");

                    b.ToTable("ClassWeekdays");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("M8IQ1");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LevelId");

                    b.HasIndex("Name");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Basic English course for beginners.",
                            LanguageId = 1,
                            Name = "English for Beginners"
                        },
                        new
                        {
                            Id = 2,
                            Description = "For learners who have some experience.",
                            LanguageId = 1,
                            Name = "Intermediate English"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Advanced course for experienced learners.",
                            LanguageId = 1,
                            Name = "Advanced English"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Specialized course for business professionals.",
                            LanguageId = 1,
                            Name = "Business English"
                        },
                        new
                        {
                            Id = 5,
                            Description = "English course designed for travelers.",
                            LanguageId = 1,
                            Name = "English for Travel"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tiếng Anh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tiếng Pháp"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tiếng Tây Ban Nha"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tiếng Trung"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tiếng Nhật"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "A1",
                            LanguageId = 1,
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = 2,
                            Code = "A2",
                            LanguageId = 1,
                            Name = "Elementary"
                        },
                        new
                        {
                            Id = 3,
                            Code = "B1",
                            LanguageId = 1,
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = 4,
                            Code = "B2",
                            LanguageId = 1,
                            Name = "Upper Intermediate"
                        },
                        new
                        {
                            Id = 5,
                            Code = "C1",
                            LanguageId = 1,
                            Name = "Advanced"
                        },
                        new
                        {
                            Id = 6,
                            Code = "C2",
                            LanguageId = 1,
                            Name = "Proficient"
                        },
                        new
                        {
                            Id = 7,
                            Code = "A1",
                            LanguageId = 2,
                            Name = "Débutant"
                        },
                        new
                        {
                            Id = 8,
                            Code = "A2",
                            LanguageId = 2,
                            Name = "Élémentaire"
                        },
                        new
                        {
                            Id = 9,
                            Code = "B1",
                            LanguageId = 2,
                            Name = "Intermédiaire"
                        },
                        new
                        {
                            Id = 10,
                            Code = "B2",
                            LanguageId = 2,
                            Name = "Supérieur"
                        },
                        new
                        {
                            Id = 11,
                            Code = "C1",
                            LanguageId = 2,
                            Name = "Avancé"
                        },
                        new
                        {
                            Id = 12,
                            Code = "C2",
                            LanguageId = 2,
                            Name = "Maîtrise"
                        },
                        new
                        {
                            Id = 13,
                            Code = "A1",
                            LanguageId = 3,
                            Name = "Principiante"
                        },
                        new
                        {
                            Id = 14,
                            Code = "A2",
                            LanguageId = 3,
                            Name = "Elemental"
                        },
                        new
                        {
                            Id = 15,
                            Code = "B1",
                            LanguageId = 3,
                            Name = "Intermedio"
                        },
                        new
                        {
                            Id = 16,
                            Code = "B2",
                            LanguageId = 3,
                            Name = "Avanzado"
                        },
                        new
                        {
                            Id = 17,
                            Code = "C1",
                            LanguageId = 3,
                            Name = "Superior"
                        },
                        new
                        {
                            Id = 18,
                            Code = "C2",
                            LanguageId = 3,
                            Name = "Maestría"
                        },
                        new
                        {
                            Id = 19,
                            Code = "HSK 1",
                            LanguageId = 4,
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = 20,
                            Code = "HSK 2",
                            LanguageId = 4,
                            Name = "Elementary"
                        },
                        new
                        {
                            Id = 21,
                            Code = "HSK 3",
                            LanguageId = 4,
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = 22,
                            Code = "HSK 4",
                            LanguageId = 4,
                            Name = "Upper Intermediate"
                        },
                        new
                        {
                            Id = 23,
                            Code = "HSK 5",
                            LanguageId = 4,
                            Name = "Advanced"
                        },
                        new
                        {
                            Id = 24,
                            Code = "HSK 6",
                            LanguageId = 4,
                            Name = "Proficient"
                        },
                        new
                        {
                            Id = 25,
                            Code = "N5",
                            LanguageId = 5,
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = 26,
                            Code = "N4",
                            LanguageId = 5,
                            Name = "Elementary"
                        },
                        new
                        {
                            Id = 27,
                            Code = "N3",
                            LanguageId = 5,
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = 28,
                            Code = "N2",
                            LanguageId = 5,
                            Name = "Upper Intermediate"
                        },
                        new
                        {
                            Id = 29,
                            Code = "N1",
                            LanguageId = 5,
                            Name = "Advanced"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 17, 13, 6, 16, 79, DateTimeKind.Utc).AddTicks(1968));

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentStatusId")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Thanh toán tiền mặt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chuyển khoản ngân hàng"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thẻ VISA"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ví điện tử"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Created"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Success"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Cancel"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PasswordHash = "$2a$13$8xZgAat/fID8u.4MYn3gk.3BoxfuT8umfTClNDt7wDaSZALc5e3.y",
                            UserProfileId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 1,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 2,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 3,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 5,
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 1,
                            UserId = 16
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 2,
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 3,
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 5,
                            UserId = 20
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 1,
                            UserId = 21
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 2,
                            UserId = 22
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 3,
                            UserId = 23
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            UserId = 24
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 5,
                            UserId = 25
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 1,
                            UserId = 26
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 2,
                            UserId = 27
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 3,
                            UserId = 28
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            UserId = 29
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 5,
                            UserId = 30
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("HireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Chưa có lớp");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Đường ABC, Ha Noi, VietNam",
                            Email = "engmaster.admin@gmail.com",
                            FirstName = "Quản trị",
                            LastName = "viên",
                            Phone = "0123456789",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1998, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe1@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123456789",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 12,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2000, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith1@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "987654321",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 13,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tom.hanks1@example.com",
                            FirstName = "Tom",
                            LastName = "Hanks",
                            Phone = "555111222",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 14,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1999, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson1@example.com",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "123123123",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 15,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1995, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.brown1@example.com",
                            FirstName = "Michael",
                            LastName = "Brown",
                            Phone = "321321321",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 16,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2001, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jessica.williams1@example.com",
                            FirstName = "Jessica",
                            LastName = "Williams",
                            Phone = "555987654",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 17,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1996, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.miller1@example.com",
                            FirstName = "David",
                            LastName = "Miller",
                            Phone = "456789123",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 18,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1994, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.davis1@example.com",
                            FirstName = "Sarah",
                            LastName = "Davis",
                            Phone = "111222333",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 19,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1999, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chris.wilson1@example.com",
                            FirstName = "Chris",
                            LastName = "Wilson",
                            Phone = "444555666",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 20,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1998, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura.martinez1@example.com",
                            FirstName = "Laura",
                            LastName = "Martinez",
                            Phone = "777888999",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 21,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ryan.garcia1@example.com",
                            FirstName = "Ryan",
                            LastName = "Garcia",
                            Phone = "123987654",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 22,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2002, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia.lee1@example.com",
                            FirstName = "Sophia",
                            LastName = "Lee",
                            Phone = "987123456",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 23,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2001, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "daniel.hernandez1@example.com",
                            FirstName = "Daniel",
                            LastName = "Hernandez",
                            Phone = "333666999",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 24,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2003, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lisa.moore1@example.com",
                            FirstName = "Lisa",
                            LastName = "Moore",
                            Phone = "789123456",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 25,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1996, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adam.taylor1@example.com",
                            FirstName = "Adam",
                            LastName = "Taylor",
                            Phone = "654321987",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 26,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2001, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "megan.anderson1@example.com",
                            FirstName = "Megan",
                            LastName = "Anderson",
                            Phone = "222111000",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 27,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oliver.thomas1@example.com",
                            FirstName = "Oliver",
                            LastName = "Thomas",
                            Phone = "999888777",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 28,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2002, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "natalie.jackson1@example.com",
                            FirstName = "Natalie",
                            LastName = "Jackson",
                            Phone = "555444333",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 29,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "liam.white1@example.com",
                            FirstName = "Liam",
                            LastName = "White",
                            Phone = "987321654",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 30,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1998, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emma.harris1@example.com",
                            FirstName = "Emma",
                            LastName = "Harris",
                            Phone = "321654987",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 31,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2000, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.clark1@example.com",
                            FirstName = "James",
                            LastName = "Clark",
                            Phone = "111999888",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 32,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2003, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna.lewis1@example.com",
                            FirstName = "Anna",
                            LastName = "Lewis",
                            Phone = "555777444",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 33,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1998, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jack.walker1@example.com",
                            FirstName = "Jack",
                            LastName = "Walker",
                            Phone = "777666555",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 34,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2001, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zoe.hall1@example.com",
                            FirstName = "Zoe",
                            LastName = "Hall",
                            Phone = "123111222",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 35,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ethan.allen1@example.com",
                            FirstName = "Ethan",
                            LastName = "Allen",
                            Phone = "321888999",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 36,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2002, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "grace.young1@example.com",
                            FirstName = "Grace",
                            LastName = "Young",
                            Phone = "555123789",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 37,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1996, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "benjamin.king1@example.com",
                            FirstName = "Benjamin",
                            LastName = "King",
                            Phone = "789654123",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 38,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2003, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ava.scott1@example.com",
                            FirstName = "Ava",
                            LastName = "Scott",
                            Phone = "654987321",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 39,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2000, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "henry.adams1@example.com",
                            FirstName = "Henry",
                            LastName = "Adams",
                            Phone = "777111444",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã có lớp"
                        },
                        new
                        {
                            Id = 40,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chloe.baker1@example.com",
                            FirstName = "Chloe",
                            LastName = "Baker",
                            Phone = "555666777",
                            RoleId = 4,
                            StartAt = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Chưa có lớp"
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            Email = "emily.johnson1@example.com",
                            FirstName = "Emily",
                            LastName = "Johnson",
                            Phone = "123123123",
                            RoleId = 3,
                            StartAt = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đang làm việc"
                        },
                        new
                        {
                            Id = 3,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            Email = "michael.brown1@example.com",
                            FirstName = "Michael",
                            LastName = "Brown",
                            Phone = "321321321",
                            RoleId = 3,
                            StartAt = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đang làm việc"
                        },
                        new
                        {
                            Id = 4,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            Email = "olivia.davis1@example.com",
                            FirstName = "Olivia",
                            LastName = "Davis",
                            Phone = "987987987",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đang làm việc"
                        },
                        new
                        {
                            Id = 5,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            Email = "william.martinez1@example.com",
                            FirstName = "William",
                            LastName = "Martinez",
                            Phone = "654654654",
                            RoleId = 3,
                            StartAt = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đang làm việc"
                        },
                        new
                        {
                            Id = 6,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            Email = "sophia.wilson1@example.com",
                            FirstName = "Sophia",
                            LastName = "Wilson",
                            Phone = "789789789",
                            RoleId = 3,
                            StartAt = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đang làm việc"
                        },
                        new
                        {
                            Id = 7,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1998, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe1@example.com",
                            FirstName = "John",
                            HireAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Doe",
                            Phone = "123456789",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã nghỉ"
                        },
                        new
                        {
                            Id = 8,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(2000, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith1@example.com",
                            FirstName = "Jane",
                            HireAt = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smith",
                            Phone = "987654321",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã nghỉ"
                        },
                        new
                        {
                            Id = 9,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1997, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tom.hanks1@example.com",
                            FirstName = "Tom",
                            HireAt = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Hanks",
                            Phone = "555111222",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã nghỉ"
                        },
                        new
                        {
                            Id = 10,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1999, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson1@example.com",
                            FirstName = "Emily",
                            HireAt = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Johnson",
                            Phone = "123123123",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã nghỉ"
                        },
                        new
                        {
                            Id = 11,
                            Address = "123 Đường ABC, Hà Nội, VN",
                            BirthDate = new DateTime(1995, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.brown1@example.com",
                            FirstName = "Michael",
                            HireAt = new DateTime(2024, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Brown",
                            Phone = "321321321",
                            RoleId = 3,
                            StartAt = new DateTime(2020, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Đã nghỉ"
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            Rank = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Staff",
                            Rank = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Teacher",
                            Rank = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Student",
                            Rank = 4
                        });
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Weekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Weekdays");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Class", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.UserAccounts", null)
                        .WithMany("Classes")
                        .HasForeignKey("UserAccountsId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.ClassWeekday", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Class", "Class")
                        .WithMany("ClassWeekdays")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.Weekday", "Weekday")
                        .WithMany("ClassWeekdays")
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Course", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Language", "Language")
                        .WithMany("Courses")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.Level", null)
                        .WithMany("Courses")
                        .HasForeignKey("LevelId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Level", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Language", "Languages")
                        .WithMany("Levels")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Payment", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Class", "Class")
                        .WithMany("Payments")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.PaymentStatus", "Status")
                        .WithOne("Payments")
                        .HasForeignKey("EngMasterWPF.Model.Entities.Payment", "PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.UserAccounts", "UserAccounts")
                        .WithMany("Payments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Status");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserAccounts", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.UserProfile", "UserProfile")
                        .WithOne("UserAccounts")
                        .HasForeignKey("EngMasterWPF.Model.Entities.UserAccounts", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserClass", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.Class", "Class")
                        .WithMany("UserClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngMasterWPF.Model.Entities.UserProfile", "UserProfiles")
                        .WithMany("UserClasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserProfile", b =>
                {
                    b.HasOne("EngMasterWPF.Model.Entities.UserRoles", "UserRoles")
                        .WithMany("UserProfiles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Class", b =>
                {
                    b.Navigation("ClassWeekdays");

                    b.Navigation("Payments");

                    b.Navigation("UserClasses");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Language", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Levels");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Level", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserAccounts", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserProfile", b =>
                {
                    b.Navigation("UserAccounts");

                    b.Navigation("UserClasses");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.UserRoles", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("EngMasterWPF.Model.Entities.Weekday", b =>
                {
                    b.Navigation("ClassWeekdays");
                });
#pragma warning restore 612, 618
        }
    }
}
